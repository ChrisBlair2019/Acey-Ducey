{"version":3,"sources":["JPEG/2C.jpg","JPEG/2D.jpg","JPEG/2H.jpg","JPEG/2S.jpg","JPEG/3C.jpg","JPEG/3D.jpg","JPEG/3H.jpg","JPEG/3S.jpg","JPEG/4C.jpg","JPEG/4D.jpg","JPEG/4H.jpg","JPEG/4S.jpg","JPEG/5C.jpg","JPEG/5D.jpg","JPEG/5H.jpg","JPEG/5S.jpg","JPEG/6C.jpg","JPEG/6D.jpg","JPEG/6H.jpg","JPEG/6S.jpg","JPEG/7C.jpg","JPEG/7D.jpg","JPEG/7H.jpg","JPEG/7S.jpg","JPEG/8C.jpg","JPEG/8D.jpg","JPEG/8H.jpg","JPEG/8S.jpg","JPEG/9C.jpg","JPEG/9D.jpg","JPEG/9H.jpg","JPEG/9S.jpg","JPEG/10C.jpg","JPEG/10D.jpg","JPEG/10H.jpg","JPEG/10S.jpg","JPEG/JC.jpg","JPEG/JD.jpg","JPEG/JH.jpg","JPEG/JS.jpg","JPEG/QC.jpg","JPEG/QD.jpg","JPEG/QH.jpg","JPEG/QS.jpg","JPEG/KC.jpg","JPEG/KD.jpg","JPEG/KH.jpg","JPEG/KS.jpg","JPEG/AC.jpg","JPEG/AD.jpg","JPEG/AH.jpg","JPEG/AS.jpg","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","cards","twoclubs","twodiamonds","twohearts","twospades","threeclubs","threediamonds","threehearts","threespades","fourclubs","fourdiamonds","fourhearts","fourspades","fiveclubs","fivediamonds","fivehearts","fivespades","sixclubs","sixdiamonds","sixhearts","sixspades","sevenclubs","sevendiamonds","sevenhearts","sevenspades","eightclubs","eightdiamonds","eighthearts","eightspades","nineclubs","ninediamonds","ninehearts","ninespades","tenclubs","tendiamonds","tenhearts","tenspades","jackclubs","jackdiamonds","jackhearts","jackspades","queenclubs","queendiamonds","queenhearts","queenspades","kingclubs","kingdiamonds","kinghearts","kingspades","aceclubs","acediamonds","acehearts","acespades","useStyles","makeStyles","theme","createStyles","root","flexGrow","App","classes","useState","getNewCardOne","setgetNewCardOne","getNewCardTwo","setgetNewCardTwo","getNewCardThree","setgetNewCardThree","cardOne","setCardOne","cardTwo","setCardTwo","cardThree","setCardThree","pickCard","min","Math","ceil","max","floor","random","className","Grid","container","spacing","item","xs","src","Button","onClick","variant","color","direction","justify","alignItems","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,gC,kBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.e9aa5a8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/2C.066ae686.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2D.c6677ab4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2H.4b2cf809.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2S.8e24cbaa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3C.38e0df66.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3D.13159968.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3H.b1db92f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3S.ec5993d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4C.78b8df72.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4D.36b51a18.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4H.8fccba55.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4S.a4b73fff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5C.06b943fb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5D.10d89619.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5H.f5d702f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5S.8fd39dd7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6C.9d135342.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6D.9ed6948d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6H.c7842889.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6S.f1499471.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7C.57202bbb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7D.3d5f6582.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7H.25680783.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7S.8e9fad3a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8C.b139c167.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8D.d5830921.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8H.424248ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8S.b824de6c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9C.79c5345d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9D.4de857aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9H.6df56ea4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9S.70f9f396.jpg\";","module.exports = __webpack_public_path__ + \"static/media/10C.354b7b1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/10D.13a231b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/10H.d0a839fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/10S.c1302c56.jpg\";","module.exports = __webpack_public_path__ + \"static/media/JC.6d00e155.jpg\";","module.exports = __webpack_public_path__ + \"static/media/JD.fea5118a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/JH.454bbb76.jpg\";","module.exports = __webpack_public_path__ + \"static/media/JS.686aea08.jpg\";","module.exports = __webpack_public_path__ + \"static/media/QC.e40a157b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/QD.81deb606.jpg\";","module.exports = __webpack_public_path__ + \"static/media/QH.87f96511.jpg\";","module.exports = __webpack_public_path__ + \"static/media/QS.5b6749fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/KC.825911bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/KD.12084ce5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/KH.39e16dba.jpg\";","module.exports = __webpack_public_path__ + \"static/media/KS.d710f10c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/AC.fd0f054b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/AD.7913ce4a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/AH.c5b6a134.jpg\";","module.exports = __webpack_public_path__ + \"static/media/AS.272af404.jpg\";","import React, {useState } from 'react';\nimport twoclubs from './JPEG/2C.jpg'\nimport twodiamonds from './JPEG/2D.jpg'\nimport twohearts from './JPEG/2H.jpg'\nimport twospades from './JPEG/2S.jpg'\n\nimport threeclubs from './JPEG/3C.jpg'\nimport threediamonds from './JPEG/3D.jpg'\nimport threehearts from './JPEG/3H.jpg'\nimport threespades from './JPEG/3S.jpg'\n\nimport fourclubs from './JPEG/4C.jpg'\nimport fourdiamonds from './JPEG/4D.jpg'\nimport fourhearts from './JPEG/4H.jpg'\nimport fourspades from './JPEG/4S.jpg'\n\nimport fiveclubs from './JPEG/5C.jpg'\nimport fivediamonds from './JPEG/5D.jpg'\nimport fivehearts from './JPEG/5H.jpg'\nimport fivespades from './JPEG/5S.jpg'\n\nimport sixclubs from './JPEG/6C.jpg'\nimport sixdiamonds from './JPEG/6D.jpg'\nimport sixhearts from './JPEG/6H.jpg'\nimport sixspades from './JPEG/6S.jpg'\n\nimport sevenclubs from './JPEG/7C.jpg'\nimport sevendiamonds from './JPEG/7D.jpg'\nimport sevenhearts from './JPEG/7H.jpg'\nimport sevenspades from './JPEG/7S.jpg'\n\nimport eightclubs from './JPEG/8C.jpg'\nimport eightdiamonds from './JPEG/8D.jpg'\nimport eighthearts from './JPEG/8H.jpg'\nimport eightspades from './JPEG/8S.jpg'\n\nimport nineclubs from './JPEG/9C.jpg'\nimport ninediamonds from './JPEG/9D.jpg'\nimport ninehearts from './JPEG/9H.jpg'\nimport ninespades from './JPEG/9S.jpg'\n\nimport tenclubs from './JPEG/10C.jpg'\nimport tendiamonds from './JPEG/10D.jpg'\nimport tenhearts from './JPEG/10H.jpg'\nimport tenspades from './JPEG/10S.jpg'\n\nimport jackclubs from './JPEG/JC.jpg'\nimport jackdiamonds from './JPEG/JD.jpg'\nimport jackhearts from './JPEG/JH.jpg'\nimport jackspades from './JPEG/JS.jpg'\n\nimport queenclubs from './JPEG/QC.jpg'\nimport queendiamonds from './JPEG/QD.jpg'\nimport queenhearts from './JPEG/QH.jpg'\nimport queenspades from './JPEG/QS.jpg'\n\nimport kingclubs from './JPEG/KC.jpg'\nimport kingdiamonds from './JPEG/KD.jpg'\nimport kinghearts from './JPEG/KH.jpg'\nimport kingspades from './JPEG/KS.jpg'\n\nimport aceclubs from './JPEG/AC.jpg'\nimport acediamonds from './JPEG/AD.jpg'\nimport acehearts from './JPEG/AH.jpg'\nimport acespades from './JPEG/AS.jpg'\n\n\n\nimport './App.css';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\n\nvar cards = [twoclubs, twoclubs, twodiamonds, twohearts, twospades, threeclubs, threediamonds, threehearts, threespades, fourclubs, fourdiamonds, fourhearts, fourspades, fiveclubs, fivediamonds, fivehearts, fivespades, sixclubs, sixdiamonds, sixhearts, sixspades, sevenclubs, sevendiamonds, sevenhearts, sevenspades, eightclubs, eightdiamonds, eighthearts, eightspades, nineclubs, ninediamonds, ninehearts, ninespades, tenclubs, tendiamonds, tenhearts, tenspades, jackclubs, jackdiamonds, jackhearts, jackspades, queenclubs, queendiamonds, queenhearts, queenspades, kingclubs, kingdiamonds, kinghearts, kingspades, aceclubs, acediamonds, acehearts, acespades]\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    }\n  }),\n);\n\n\nvar getNewCardOne = false\n\nvar getNewCardTwo = false\n\nvar getNewCardThree = false\n\nfunction App() {\n \n  const classes = useStyles();\n\n  const [getNewCardOne, setgetNewCardOne] = useState(false);\n\n  const [getNewCardTwo, setgetNewCardTwo] = useState(false);\n\n  const [getNewCardThree, setgetNewCardThree] = useState(false);\n\n  const [cardOne, setCardOne] = useState(0);\n  const [cardTwo, setCardTwo] = useState(0);\n  const [cardThree, setCardThree] = useState(0);\n\n\n  const pickCard = () => {\n\n    var min = Math.ceil(1);\n    var max = Math.floor(53);\n    return Math.floor(Math.random() * (max - min)) + min; \n}\n\n  return (\n    <div className={classes.root}>\n\n      <h1>Scuffed Acey-Ducey</h1>\n      <Grid container spacing={3} >\n        <Grid item xs>\n        {getNewCardOne && <img  className=\"images\" src={cards[cardOne]}></img> }\n        <Button onClick={() => {setgetNewCardOne(true)\n          setCardOne(pickCard())\n        }\n          } variant=\"contained\" color=\"primary\">\n          Get Card\n          </Button>\n        </Grid>\n        <Grid item xs>\n        {getNewCardTwo && <img  className=\"images\" src={cards[cardTwo]}></img> }\n        <Button onClick={() => {\n          setgetNewCardTwo(true)\n          setCardTwo(pickCard())\n        }\n          } variant=\"contained\" color=\"primary\">\n          Get Card\n          </Button>\n        </Grid>\n        <Grid item xs>\n        {getNewCardThree && <img className=\"images\" src={cards[cardThree]}></img> }\n        <Button onClick={() => {\n          setgetNewCardThree(true)\n          setCardThree(pickCard())\n        }\n          } variant=\"contained\" color=\"primary\">\n          Get Card\n          </Button>\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3}  direction=\"row\" justify=\"center\"alignItems=\"center\">\n      <Grid item xs>\n      <Button className=\"resetButton\" onClick={() => {\n        setgetNewCardOne(false)\n        setgetNewCardTwo(false)\n        setgetNewCardThree(false)\n        setCardOne(0)\n        setCardTwo(0)\n        setCardThree(0)\n      }} variant=\"contained\" color=\"primary\">\n          RESET\n      </Button>\n      </Grid>\n      </Grid>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}